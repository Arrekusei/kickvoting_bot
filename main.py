from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
import os
import logging

# -------------------
# üîß –õ–æ–≥–≥–µ—Ä
# -------------------
logging.basicConfig(level=logging.DEBUG)

# -------------------
# üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
# -------------------
application = ApplicationBuilder().token(os.getenv("TOKEN")).build()

# -------------------
# üó≥ –ö–æ–º–∞–Ω–¥–∞ /vote
# -------------------
async def vote_command(update: Update, context):
    keyboard = [
        [InlineKeyboardButton("–î–∞", callback_data="yes"),
         InlineKeyboardButton("–ù–µ—Ç", callback_data="no")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ö–∞–∫–æ–π –≤–∞—à –≤—ã–±–æ—Ä?", reply_markup=reply_markup)

# -------------------
# üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
# -------------------
async def handle_vote(update: Update, context):
    query = update.callback_query
    data = query.data
    user = query.from_user
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} ({user.id}) –≤—ã–±—Ä–∞–ª '{data}'")
    await query.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {data}")

# -------------------
# üì§ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
# -------------------
application.add_handler(CommandHandler('test', test_command))
application.add_handler(CommandHandler('vote', vote_command))
application.add_handler(CallbackQueryHandler(handle_vote))

# -------------------
# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
# -------------------
application.run_polling()
