from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler
import os
import logging
import asyncio
from flask import Flask, request

# -------------------
# üîß –õ–æ–≥–≥–µ—Ä
# -------------------
logging.basicConfig(level=logging.DEBUG)

app = Flask(__name__)
application = ApplicationBuilder().token(os.getenv("TOKEN")).build()

# -------------------
# üöÄ –ö–æ–º–∞–Ω–¥–∞ /test
# -------------------
async def test_command(update: Update, context):
    await update.message.reply_text("–ë–æ—Ç –∂–∏–≤!")

application.add_handler(CommandHandler('test', test_command))

# -------------------
# üåê –§—É–Ω–∫—Ü–∏—è webhook
# -------------------
@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.get_json()
    logging.info(f"–ü–æ–ª—É—á–µ–Ω–æ: {data}")
    
    try:
        update = Update.de_json(data, application.bot)
        asyncio.run(application.update_queue.put(update))
        logging.debug("–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {e}")

    return 'ok'

@app.route('/')
def index():
    return "Bot is running!"

# -------------------
# üîÑ –ó–∞–ø—É—Å–∫ –±–æ—Ç–æ–≤–æ–≥–æ —Ü–∏–∫–ª–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
# -------------------
import threading

def run_ptb_app():
    # PTB —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ —Å–æ–±—ã—Ç–∏–π
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    application.run_polling(poll_interval=0.5)  # <-- –í–∞–∂–Ω–æ!

threading.Thread(target=run_ptb_app, daemon=True).start()

# -------------------
# üöÄ –ó–∞–ø—É—Å–∫ Flask
# -------------------
if __name__ == '__main__':
    PORT = int(os.environ.get("PORT", 10000))
    app.run(host='0.0.0.0', port=PORT)
