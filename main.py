from telegram.ext import ApplicationBuilder, CommandHandler
from telegram import Update
from flask import Flask, request
import os
import asyncio
import logging

# -------------------
# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
# -------------------
logging.basicConfig(level=logging.DEBUG)

app = Flask(__name__)
application = ApplicationBuilder().token(os.getenv("TOKEN")).build()

@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.get_json(force=True)
    logging.info(f"–ü–æ–ª—É—á–µ–Ω–æ: {data}")
    update = Update.de_json(data, application.bot)  # <-- —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç
    asyncio.run(application.update_queue.put(update))
    return 'ok'

@app.route('/')
def index():
    return "–ë–æ—Ç –∂–∏–≤!"

# -------------------
# üöÄ –ö–æ–º–∞–Ω–¥–∞ /test
# -------------------
async def test_command(update, context):
    user = update.effective_user
    chat_id = update.effective_chat.id
    logging.debug(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} ({user.id}) –Ω–∞–ø–∏—Å–∞–ª /test")
    await update.message.reply_text("–ë–æ—Ç –∂–∏–≤!")

application.add_handler(CommandHandler('test', test_command))

# -------------------
# üöÄ –ó–∞–ø—É—Å–∫ Flask
# -------------------
if __name__ == '__main__':
    PORT = int(os.environ.get("PORT", 80))
    app.run(host='0.0.0.0', port=PORT)
